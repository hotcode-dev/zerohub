// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.6.1
// source: proto/server_message.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Peer includes peer infomation and peer metadata
type Peer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MetaData string `protobuf:"bytes,2,opt,name=metaData,proto3" json:"metaData,omitempty"`
	JoinedAt uint32 `protobuf:"varint,3,opt,name=joinedAt,proto3" json:"joinedAt,omitempty"`
}

func (x *Peer) Reset() {
	*x = Peer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_server_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Peer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Peer) ProtoMessage() {}

func (x *Peer) ProtoReflect() protoreflect.Message {
	mi := &file_proto_server_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Peer.ProtoReflect.Descriptor instead.
func (*Peer) Descriptor() ([]byte, []int) {
	return file_proto_server_message_proto_rawDescGZIP(), []int{0}
}

func (x *Peer) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Peer) GetMetaData() string {
	if x != nil {
		return x.MetaData
	}
	return ""
}

func (x *Peer) GetJoinedAt() uint32 {
	if x != nil {
		return x.JoinedAt
	}
	return 0
}

// HubInfoMessage includes hub infomation
type HubInfoMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt uint32  `protobuf:"varint,2,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	MyPeerID  uint32  `protobuf:"varint,3,opt,name=myPeerID,proto3" json:"myPeerID,omitempty"`
	Peers     []*Peer `protobuf:"bytes,4,rep,name=peers,proto3" json:"peers,omitempty"`
}

func (x *HubInfoMessage) Reset() {
	*x = HubInfoMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_server_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HubInfoMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HubInfoMessage) ProtoMessage() {}

func (x *HubInfoMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_server_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HubInfoMessage.ProtoReflect.Descriptor instead.
func (*HubInfoMessage) Descriptor() ([]byte, []int) {
	return file_proto_server_message_proto_rawDescGZIP(), []int{1}
}

func (x *HubInfoMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *HubInfoMessage) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *HubInfoMessage) GetMyPeerID() uint32 {
	if x != nil {
		return x.MyPeerID
	}
	return 0
}

func (x *HubInfoMessage) GetPeers() []*Peer {
	if x != nil {
		return x.Peers
	}
	return nil
}

// PeerJoinedMessage will send if a peer has joined
type PeerJoinedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer *Peer `protobuf:"bytes,1,opt,name=peer,proto3" json:"peer,omitempty"`
}

func (x *PeerJoinedMessage) Reset() {
	*x = PeerJoinedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_server_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeerJoinedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerJoinedMessage) ProtoMessage() {}

func (x *PeerJoinedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_server_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerJoinedMessage.ProtoReflect.Descriptor instead.
func (*PeerJoinedMessage) Descriptor() ([]byte, []int) {
	return file_proto_server_message_proto_rawDescGZIP(), []int{2}
}

func (x *PeerJoinedMessage) GetPeer() *Peer {
	if x != nil {
		return x.Peer
	}
	return nil
}

// PeerDisconnectedMessage will send if a peer has left
type PeerDisconnectedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerID uint32 `protobuf:"varint,1,opt,name=peerID,proto3" json:"peerID,omitempty"`
}

func (x *PeerDisconnectedMessage) Reset() {
	*x = PeerDisconnectedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_server_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeerDisconnectedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerDisconnectedMessage) ProtoMessage() {}

func (x *PeerDisconnectedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_server_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerDisconnectedMessage.ProtoReflect.Descriptor instead.
func (*PeerDisconnectedMessage) Descriptor() ([]byte, []int) {
	return file_proto_server_message_proto_rawDescGZIP(), []int{3}
}

func (x *PeerDisconnectedMessage) GetPeerID() uint32 {
	if x != nil {
		return x.PeerID
	}
	return 0
}

// OfferMessage is sent offer SDP from offering peer to answer peer
type OfferMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OfferPeerID uint32 `protobuf:"varint,1,opt,name=offerPeerID,proto3" json:"offerPeerID,omitempty"`
	OfferSDP    string `protobuf:"bytes,2,opt,name=offerSDP,proto3" json:"offerSDP,omitempty"`
}

func (x *OfferMessage) Reset() {
	*x = OfferMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_server_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfferMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfferMessage) ProtoMessage() {}

func (x *OfferMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_server_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfferMessage.ProtoReflect.Descriptor instead.
func (*OfferMessage) Descriptor() ([]byte, []int) {
	return file_proto_server_message_proto_rawDescGZIP(), []int{4}
}

func (x *OfferMessage) GetOfferPeerID() uint32 {
	if x != nil {
		return x.OfferPeerID
	}
	return 0
}

func (x *OfferMessage) GetOfferSDP() string {
	if x != nil {
		return x.OfferSDP
	}
	return ""
}

// AnswerMessage is sent answer SDP from answer peer to offering peer
type AnswerMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnswerPeerID uint32 `protobuf:"varint,1,opt,name=answerPeerID,proto3" json:"answerPeerID,omitempty"`
	AnswerSDP    string `protobuf:"bytes,2,opt,name=answerSDP,proto3" json:"answerSDP,omitempty"`
}

func (x *AnswerMessage) Reset() {
	*x = AnswerMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_server_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnswerMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnswerMessage) ProtoMessage() {}

func (x *AnswerMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_server_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnswerMessage.ProtoReflect.Descriptor instead.
func (*AnswerMessage) Descriptor() ([]byte, []int) {
	return file_proto_server_message_proto_rawDescGZIP(), []int{5}
}

func (x *AnswerMessage) GetAnswerPeerID() uint32 {
	if x != nil {
		return x.AnswerPeerID
	}
	return 0
}

func (x *AnswerMessage) GetAnswerSDP() string {
	if x != nil {
		return x.AnswerSDP
	}
	return ""
}

// ICECandidateMessage is not using yet
type ICECandidateMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerID    uint32 `protobuf:"varint,1,opt,name=peerID,proto3" json:"peerID,omitempty"`
	Candidate string `protobuf:"bytes,2,opt,name=candidate,proto3" json:"candidate,omitempty"`
}

func (x *ICECandidateMessage) Reset() {
	*x = ICECandidateMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_server_message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ICECandidateMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ICECandidateMessage) ProtoMessage() {}

func (x *ICECandidateMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_server_message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ICECandidateMessage.ProtoReflect.Descriptor instead.
func (*ICECandidateMessage) Descriptor() ([]byte, []int) {
	return file_proto_server_message_proto_rawDescGZIP(), []int{6}
}

func (x *ICECandidateMessage) GetPeerID() uint32 {
	if x != nil {
		return x.PeerID
	}
	return 0
}

func (x *ICECandidateMessage) GetCandidate() string {
	if x != nil {
		return x.Candidate
	}
	return ""
}

// ServerMessage is the message sent from server
type ServerMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Message:
	//
	//	*ServerMessage_HubInfoMessage
	//	*ServerMessage_PeerJoined
	//	*ServerMessage_PeerDisconnected
	//	*ServerMessage_OfferMessage
	//	*ServerMessage_AnswerMessage
	//	*ServerMessage_IceCandidateMessage
	Message isServerMessage_Message `protobuf_oneof:"message"`
}

func (x *ServerMessage) Reset() {
	*x = ServerMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_server_message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerMessage) ProtoMessage() {}

func (x *ServerMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_server_message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerMessage.ProtoReflect.Descriptor instead.
func (*ServerMessage) Descriptor() ([]byte, []int) {
	return file_proto_server_message_proto_rawDescGZIP(), []int{7}
}

func (m *ServerMessage) GetMessage() isServerMessage_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *ServerMessage) GetHubInfoMessage() *HubInfoMessage {
	if x, ok := x.GetMessage().(*ServerMessage_HubInfoMessage); ok {
		return x.HubInfoMessage
	}
	return nil
}

func (x *ServerMessage) GetPeerJoined() *PeerJoinedMessage {
	if x, ok := x.GetMessage().(*ServerMessage_PeerJoined); ok {
		return x.PeerJoined
	}
	return nil
}

func (x *ServerMessage) GetPeerDisconnected() *PeerDisconnectedMessage {
	if x, ok := x.GetMessage().(*ServerMessage_PeerDisconnected); ok {
		return x.PeerDisconnected
	}
	return nil
}

func (x *ServerMessage) GetOfferMessage() *OfferMessage {
	if x, ok := x.GetMessage().(*ServerMessage_OfferMessage); ok {
		return x.OfferMessage
	}
	return nil
}

func (x *ServerMessage) GetAnswerMessage() *AnswerMessage {
	if x, ok := x.GetMessage().(*ServerMessage_AnswerMessage); ok {
		return x.AnswerMessage
	}
	return nil
}

func (x *ServerMessage) GetIceCandidateMessage() *ICECandidateMessage {
	if x, ok := x.GetMessage().(*ServerMessage_IceCandidateMessage); ok {
		return x.IceCandidateMessage
	}
	return nil
}

type isServerMessage_Message interface {
	isServerMessage_Message()
}

type ServerMessage_HubInfoMessage struct {
	HubInfoMessage *HubInfoMessage `protobuf:"bytes,1,opt,name=hubInfoMessage,proto3,oneof"`
}

type ServerMessage_PeerJoined struct {
	PeerJoined *PeerJoinedMessage `protobuf:"bytes,2,opt,name=peerJoined,proto3,oneof"`
}

type ServerMessage_PeerDisconnected struct {
	PeerDisconnected *PeerDisconnectedMessage `protobuf:"bytes,3,opt,name=peerDisconnected,proto3,oneof"`
}

type ServerMessage_OfferMessage struct {
	OfferMessage *OfferMessage `protobuf:"bytes,4,opt,name=offerMessage,proto3,oneof"`
}

type ServerMessage_AnswerMessage struct {
	AnswerMessage *AnswerMessage `protobuf:"bytes,5,opt,name=answerMessage,proto3,oneof"`
}

type ServerMessage_IceCandidateMessage struct {
	IceCandidateMessage *ICECandidateMessage `protobuf:"bytes,6,opt,name=iceCandidateMessage,proto3,oneof"`
}

func (*ServerMessage_HubInfoMessage) isServerMessage_Message() {}

func (*ServerMessage_PeerJoined) isServerMessage_Message() {}

func (*ServerMessage_PeerDisconnected) isServerMessage_Message() {}

func (*ServerMessage_OfferMessage) isServerMessage_Message() {}

func (*ServerMessage_AnswerMessage) isServerMessage_Message() {}

func (*ServerMessage_IceCandidateMessage) isServerMessage_Message() {}

var File_proto_server_message_proto protoreflect.FileDescriptor

var file_proto_server_message_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4e, 0x0a, 0x04,
	0x50, 0x65, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x1a, 0x0a, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x6a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x41, 0x74, 0x22, 0x77, 0x0a, 0x0e,
	0x48, 0x75, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x6d, 0x79, 0x50, 0x65, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x6d, 0x79, 0x50, 0x65, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1b, 0x0a, 0x05, 0x70, 0x65, 0x65, 0x72,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x05,
	0x70, 0x65, 0x65, 0x72, 0x73, 0x22, 0x2e, 0x0a, 0x11, 0x50, 0x65, 0x65, 0x72, 0x4a, 0x6f, 0x69,
	0x6e, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x04, 0x70, 0x65,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52,
	0x04, 0x70, 0x65, 0x65, 0x72, 0x22, 0x31, 0x0a, 0x17, 0x50, 0x65, 0x65, 0x72, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x44, 0x22, 0x4c, 0x0a, 0x0c, 0x4f, 0x66, 0x66, 0x65,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x66, 0x66, 0x65,
	0x72, 0x50, 0x65, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6f,
	0x66, 0x66, 0x65, 0x72, 0x50, 0x65, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x66,
	0x66, 0x65, 0x72, 0x53, 0x44, 0x50, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x66,
	0x66, 0x65, 0x72, 0x53, 0x44, 0x50, 0x22, 0x51, 0x0a, 0x0d, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x50, 0x65, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x61,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x50, 0x65, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x61,
	0x6e, 0x73, 0x77, 0x65, 0x72, 0x53, 0x44, 0x50, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x53, 0x44, 0x50, 0x22, 0x4b, 0x0a, 0x13, 0x49, 0x43, 0x45,
	0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x70, 0x65, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61, 0x6e, 0x64,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x6e,
	0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x22, 0x8a, 0x03, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x0e, 0x68, 0x75, 0x62, 0x49,
	0x6e, 0x66, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x48, 0x75, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x48, 0x00, 0x52, 0x0e, 0x68, 0x75, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x70, 0x65, 0x65, 0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x4a, 0x6f,
	0x69, 0x6e, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x70,
	0x65, 0x65, 0x72, 0x4a, 0x6f, 0x69, 0x6e, 0x65, 0x64, 0x12, 0x46, 0x0a, 0x10, 0x70, 0x65, 0x65,
	0x72, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52,
	0x10, 0x70, 0x65, 0x65, 0x72, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x65,
	0x64, 0x12, 0x33, 0x0a, 0x0c, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x0d, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52,
	0x0d, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x48,
	0x0a, 0x13, 0x69, 0x63, 0x65, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x49, 0x43,
	0x45, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x48, 0x00, 0x52, 0x13, 0x69, 0x63, 0x65, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x6e, 0x74, 0x73, 0x64, 0x2f, 0x7a, 0x65, 0x72, 0x6f, 0x2d, 0x68, 0x75, 0x62, 0x2f,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_server_message_proto_rawDescOnce sync.Once
	file_proto_server_message_proto_rawDescData = file_proto_server_message_proto_rawDesc
)

func file_proto_server_message_proto_rawDescGZIP() []byte {
	file_proto_server_message_proto_rawDescOnce.Do(func() {
		file_proto_server_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_server_message_proto_rawDescData)
	})
	return file_proto_server_message_proto_rawDescData
}

var file_proto_server_message_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_server_message_proto_goTypes = []interface{}{
	(*Peer)(nil),                    // 0: Peer
	(*HubInfoMessage)(nil),          // 1: HubInfoMessage
	(*PeerJoinedMessage)(nil),       // 2: PeerJoinedMessage
	(*PeerDisconnectedMessage)(nil), // 3: PeerDisconnectedMessage
	(*OfferMessage)(nil),            // 4: OfferMessage
	(*AnswerMessage)(nil),           // 5: AnswerMessage
	(*ICECandidateMessage)(nil),     // 6: ICECandidateMessage
	(*ServerMessage)(nil),           // 7: ServerMessage
}
var file_proto_server_message_proto_depIdxs = []int32{
	0, // 0: HubInfoMessage.peers:type_name -> Peer
	0, // 1: PeerJoinedMessage.peer:type_name -> Peer
	1, // 2: ServerMessage.hubInfoMessage:type_name -> HubInfoMessage
	2, // 3: ServerMessage.peerJoined:type_name -> PeerJoinedMessage
	3, // 4: ServerMessage.peerDisconnected:type_name -> PeerDisconnectedMessage
	4, // 5: ServerMessage.offerMessage:type_name -> OfferMessage
	5, // 6: ServerMessage.answerMessage:type_name -> AnswerMessage
	6, // 7: ServerMessage.iceCandidateMessage:type_name -> ICECandidateMessage
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_proto_server_message_proto_init() }
func file_proto_server_message_proto_init() {
	if File_proto_server_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_server_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Peer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_server_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HubInfoMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_server_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeerJoinedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_server_message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeerDisconnectedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_server_message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfferMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_server_message_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnswerMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_server_message_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ICECandidateMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_server_message_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_server_message_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*ServerMessage_HubInfoMessage)(nil),
		(*ServerMessage_PeerJoined)(nil),
		(*ServerMessage_PeerDisconnected)(nil),
		(*ServerMessage_OfferMessage)(nil),
		(*ServerMessage_AnswerMessage)(nil),
		(*ServerMessage_IceCandidateMessage)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_server_message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_server_message_proto_goTypes,
		DependencyIndexes: file_proto_server_message_proto_depIdxs,
		MessageInfos:      file_proto_server_message_proto_msgTypes,
	}.Build()
	File_proto_server_message_proto = out.File
	file_proto_server_message_proto_rawDesc = nil
	file_proto_server_message_proto_goTypes = nil
	file_proto_server_message_proto_depIdxs = nil
}
